- content_for :search do
  = form_tag :bank_transactions, :method => :get do
    = t("common.title.search")
    = " : "
    = search_field_tag 'query', params[:query]
    = submit_tag "검색"
    = select_tag :bank_account_id,
      bank_account_select_list(params[:bank_account_id]),
      "onchange" => "this.form.submit()"

#show_command
  - unless params[:bank_account_id].blank?
    = link_to t('bank_transactions.verify.link'), verify_bank_transactions_path(bank_account_id: params[:bank_account_id])
    = " "
  = link_to t('common.link.except_column'), except_columns_path(class_name: BankTransaction), id: :select_except_columns, remote: true
  = " "
  = link_to t('bank_transactions.new.link'), [:new, :bank_transaction]
  = " "
  = link_to t('bank_transactions.excel.link'), excel_bank_transactions_path(bank_account: params[:bank_account_id])
  = " "
  = link_to t('common.title.back'), :bank_accounts

h2
  - if bank_account
    = "#{bank_account.name_with_number}"
  - else
    = t('bank_transactions.index.bank_transfer')

- unless @bank_transactions.empty?
  = render 'list', bank_transactions: @bank_transactions

  br
  center
    = will_paginate @bank_transactions
  #export-menu
    = t('common.export') + " : "
    = link_to t('bank_transactions.export.excel'), export_bank_transactions_path(forward_params.merge(to: :xls)), method: :post
    = " "
    = link_to t('bank_transactions.export.pdf'), export_bank_transactions_path(forward_params.merge(to: :pdf)), method: :post
- else
  h4= t('.empty')